//
//  SignUpInteractor.swift
//  Basecode
//
//  Created by SOTSYS203 on 19/02/18.
//  Copyright (c) 2018 SOTSYS203. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SignUpInteractorProtocol {
    func callSignUpApi(params : Dictionary<String, Any>)
}

protocol SignUpDataStore {
    //var name: String { get set }
}

class SignUpInteractor: SignUpInteractorProtocol, SignUpDataStore {
    var presenter: SignUpPresentationProtocol?
    //var name: String = ""
    
    // MARK: Do something
    func callSignUpApi(params : Dictionary<String, Any>) {
                
        SOService.callAPI(SOAPI.signUp(params: params)) { (code, error, result) in
            print(code , error ?? "", result ?? "")
            //print(code, error ?? "", result ?? "")
            if error == nil && code == 1 {
                let objUser = BaseModel(json: result!)
                print(objUser)
                UserDefaults.standard.set(objUser.responseData?.vAuthKey, forKey: kAuthKey)
                self.presenter?.getSignUpResponse(userData : objUser)
            } else {
                self.presenter?.getSignUpResponse(userData : nil)
            }
        }
    }
}
