//
//  SelectSocialMediaViewController.swift
//  GeekMeets
//
//  Created by SOTSYS216 on 24/04/20.
//  Copyright (c) 2020 SOTSYS203. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SelectSocialMediaProtocol: class {
    func displaySomething()
    func displayQuesionsData(Data : [QuestionnaireModel])
}

class SelectSocialMediaViewController: UIViewController, SelectSocialMediaProtocol {
    //var interactor : SelectSocialMediaInteractorProtocol?
    var presenter : SelectSocialMediaPresentationProtocol?
    var arrQuestionnaire:[QuestionnaireModel] = []
    var arrSocialMediaSelected:[Int] = [0]
             
    @IBOutlet weak var clnSelectSocialMedia: UICollectionView!
          
    // MARK: Object lifecycle
          
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
              super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
              setup()
          }
          
          required init?(coder aDecoder: NSCoder) {
              super.init(coder: aDecoder)
              setup()
          }
          
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = SelectSocialMediaInteractor()
        let presenter = SelectSocialMediaPresenter()
        
        //View Controller will communicate with only presenter
        viewController.presenter = presenter
        //viewController.interactor = interactor
        
        //Presenter will communicate with Interector and Viewcontroller
        presenter.viewController = viewController
        presenter.interactor = interactor
        
        //Interactor will communucate with only presenter.
        interactor.presenter = presenter
    }
    
  
       
      
       
       
       
           // MARK: View lifecycle
           
           override func viewDidLoad() {
               super.viewDidLoad()
               doSomething()
           }
           
           // MARK: Do something
           
           //@IBOutlet weak var nameTextField: UITextField!
           
           func doSomething() {
                self.navigationController?.isNavigationBarHidden = true
             self.presenter?.callQuestionnaireRequest()
           }
           
           func displaySomething() {
               //nameTextField.text = viewModel.name
           }
           func displayQuesionsData(Data: [QuestionnaireModel]) {
               print(Data)
               arrQuestionnaire = Data
               print( arrQuestionnaire[0].response_set?.response_option?[3].name!)
           }
         
         //MARK: IBAction Method
         
           @IBAction func actionContinues(_ sender: Any) {
                  self.presenter?.actionContinue()
            }
           @IBAction func actionSkip(_ sender: Any) {
                  self.presenter?.actionContinue()
            }
       }



       //MARK:UICollectionview

       extension SelectSocialMediaViewController: UICollectionViewDelegate, UICollectionViewDataSource, UICollectionViewDelegateFlowLayout,SelectSocialMediaDelegate
       {
        
        
         
         
        
           func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
             return arrQuestionnaire[0].response_set?.response_option?.count ?? 0
           }
           
           func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell
           {
               let cell : SelectSocialMediaCell = collectionView.dequeueReusableCell(withReuseIdentifier: "SelectSocialMediaCell", for: indexPath) as! SelectSocialMediaCell
                cell.delegate = self
                cell.indexPath = indexPath
               cell.btnSelectSocialMedia.setTitle(arrQuestionnaire[0].response_set?.response_option?[indexPath.row].name!, for: .normal)
                cell.btnSelectSocialMedia.layer.borderColor = #colorLiteral(red: 0, green: 0, blue: 0, alpha: 0.5)
                cell.btnSelectSocialMedia.setTitleColor(#colorLiteral(red: 0, green: 0, blue: 0, alpha: 0.5), for: .normal)
             if arrSocialMediaSelected.contains(indexPath.row) {
                cell.btnSelectSocialMedia.layer.borderColor = #colorLiteral(red: 0.7098039216, green: 0.3254901961, blue: 0.8941176471, alpha: 1)
                cell.btnSelectSocialMedia.setTitleColor(#colorLiteral(red: 0.7098039216, green: 0.3254901961, blue: 0.8941176471, alpha: 1), for: .normal)
             }
                 return cell
           }
           
           func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, sizeForItemAt indexPath: IndexPath) -> CGSize {
             let yourWidth = collectionView.bounds.width/3.0
             let yourHeight = CGFloat(50)
             return CGSize(width: yourWidth, height: yourHeight)
           }
           func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, insetForSectionAt section: Int) -> UIEdgeInsets {
               return UIEdgeInsets.zero
           }

           func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, minimumInteritemSpacingForSectionAt section: Int) -> CGFloat {
             
               return 0
             
           }

           func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, minimumLineSpacingForSectionAt section: Int) -> CGFloat {
               return 0
           }
          
         func actionSelectSocialMedia(at index: IndexPath) {
            
             if arrSocialMediaSelected.contains(index.row){
               if let index = arrSocialMediaSelected.index(of: index.row) {
                   arrSocialMediaSelected.remove(at: index)
               }
             }else{
             arrSocialMediaSelected.append(index.row)
             }
             clnSelectSocialMedia.reloadData()
           }
       }
