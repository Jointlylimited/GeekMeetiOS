//
//  SelectCategoriesInteractor.swift
//  GeekMeets
//
//  Created by SOTSYS216 on 24/04/20.
//  Copyright (c) 2020 SOTSYS203. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SelectCategoriesInteractorProtocol {
    func doSomething()
    func callQuestionnaireApi()
}

protocol SelectCategoriesDataStore {
    //var name: String { get set }
}

class SelectCategoriesInteractor: SelectCategoriesInteractorProtocol, SelectCategoriesDataStore {
    var presenter: SelectCategoriesPresentationProtocol?
    //var name: String = ""
    
    // MARK: Do something
    func doSomething() {
        
    }
    func callQuestionnaireApi() {
            
              if let path = Bundle.main.path(forResource: "questionnaire", ofType: "json") {
                  do {
                      let data = try Data(contentsOf: URL(fileURLWithPath: path), options: .mappedIfSafe)
                      let jsonResult = try JSONSerialization.jsonObject(with: data, options: .mutableLeaves)
                      if let jsonResult = jsonResult as? NSArray {
                          // do stuff
                          print(jsonResult)
                          var abc:[QuestionnaireModel]? = []
                          
                          let data = (jsonResult as! NSArray)
                          print(data)
                          let dict = data as! [NSDictionary]
                          print(dict)
                          abc = [QuestionnaireModel(dictionary: dict[3])!]
                          print(abc)
                          //                  let Data:QuestionnaireModel = QuestionnaireModel.init(dictionary: jsonResult)!
                          self.presenter?.getQuestionnaireResponse(userData: abc)
                      }
                  } catch {
                      // handle error
                  }
              }
            
        }
    }
