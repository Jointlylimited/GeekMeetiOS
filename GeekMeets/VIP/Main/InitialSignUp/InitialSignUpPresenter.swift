//
//  InitialSignUpPresenter.swift
//  GeekMeets
//
//  Created by SOTSYS216 on 15/04/20.
//  Copyright (c) 2020 SOTSYS203. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol InitialSignUpPresentationProtocol {
    func actionSignUp()
    func actionLogin()
    
    func callFBLogin()
    func getFBResponse(response:SignupSocialDM)
    
    func callGoogleSigninAPI(loginParams : Dictionary<String, String>)
    
    func getLoginResponse(userData : UserAuthResponse?)
    func callSnapchatLoginRequest(objLoginVC : InitialSignUpViewController)
    func callSnapchatLoginResponse(token: String, entity : UserEntity)
    
    func gotoSignUpScreen(signParams : UserAuthResponseField)
}

class InitialSignUpPresenter: InitialSignUpPresentationProtocol {
    weak var viewController: InitialSignUpProtocol?
    var interactor: InitialSignUpInteractorProtocol?
    
    func actionSignUp()
    {
        let controller = GeekMeets_StoryBoard.LoginSignUp.instantiateViewController(withIdentifier: GeekMeets_ViewController.SignUpScreen) as! SignUpVCViewController
        controller.socialType = false
        if let view = self.viewController as? UIViewController
        {
            view.pushVC(controller)
        }
    }
    
    func actionLogin()
    {
        let controller = GeekMeets_StoryBoard.LoginSignUp.instantiateViewController(withIdentifier: GeekMeets_ViewController.SignInScreen)
        if let view = self.viewController as? UIViewController
        {
            view.pushVC(controller)
        }
    }
    
    func callFBLogin() {
        self.interactor?.callFBLogin()
    }
    
    func getFBResponse(response: SignupSocialDM) {
        print(response.email ?? "")
        print(response.firstName ?? "")
        print(response.token)
        
        let param = RequestParameter.sharedInstance().socialSigninParams(tiSocialType: "1", accessKey: response.token, service: "facebook")
        self.interactor?.callSocialSignInAPI(params: param)
    }

    func callGoogleSigninAPI(loginParams : Dictionary<String, String>) {
        self.interactor?.callSocialSignInAPI(params: loginParams)
    }
    
    func getLoginResponse(userData : UserAuthResponse?) {
        if userData != nil {
            Authentication.setLoggedInStatus(true)
            UserDataModel.currentUser = userData?.responseData
            let controller = GeekMeets_StoryBoard.Questionnaire.instantiateViewController(withIdentifier: GeekMeets_ViewController.SelectAgeRange)
            if let view = self.viewController as? UIViewController
            {
                view.pushVC(controller)
            }
        }
    }
    
    func callSnapchatLoginRequest(objLoginVC : InitialSignUpViewController){
        self.interactor?.callSnapchatLogin(objLoginVC : objLoginVC)
    }
    
    func callSnapchatLoginResponse(token: String, entity : UserEntity){
        let param = RequestParameter.sharedInstance().socialSigninParams(tiSocialType: "4", accessKey: token, service: "snapchat")
        self.interactor?.callSocialSignInAPI(params: param)
    }
    
    //MARK: If user not registered go to sign up screen
    func gotoSignUpScreen(signParams : UserAuthResponseField){
        if signParams.vEmail == "" || signParams.vPhone == "" {
            let controller = GeekMeets_StoryBoard.LoginSignUp.instantiateViewController(withIdentifier: GeekMeets_ViewController.SignUpScreen) as? SignUpVCViewController
            UserDataModel.currentUser = signParams
            controller?.socialType = true
            if let view = self.viewController as? UIViewController
            {
                view.pushVC(controller!)
            }
        } else {
            let controller = GeekMeets_StoryBoard.LoginSignUp.instantiateViewController(withIdentifier: GeekMeets_ViewController.UserProfile) as! UserProfileViewController
            
            if let view = self.viewController as? UIViewController
            {
                view.pushVC(controller)
            }
        }
    }
}
