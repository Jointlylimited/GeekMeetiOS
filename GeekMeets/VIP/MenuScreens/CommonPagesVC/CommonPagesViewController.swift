//
//  CommonPagesViewController.swift
//  GeekMeets
//
//  Created by SOTSYS124 on 23/04/20.
//  Copyright (c) 2020 SOTSYS203. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CommonPagesProtocol: class {
    func getContentResponse(response : ContentPageResponse)
}

class CommonPagesViewController: UIViewController, CommonPagesProtocol {
    //var interactor : CommonPagesInteractorProtocol?
    var presenter : CommonPagesPresentationProtocol?
    
    @IBOutlet weak var lblScreenTitle: UILabel!
    @IBOutlet weak var descView: UITextView!
    
    var objCommonData : CommonModelData?
    var slug : String = ""
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = CommonPagesInteractor()
        let presenter = CommonPagesPresenter()
        
        //View Controller will communicate with only presenter
        viewController.presenter = presenter
        //viewController.interactor = interactor
        
        //Presenter will communicate with Interector and Viewcontroller
        presenter.viewController = viewController
        presenter.interactor = interactor
        
        //Interactor will communucate with only presenter.
        interactor.presenter = presenter
    }
    
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        setData()
    }
    
    
    func setData(){
        self.lblScreenTitle.text = objCommonData?.Title
        if slug != "" {
            self.presenter?.CallContentPageAPI(slug: slug)
        }
    }
    @IBAction func btnBackAction(_ sender: UIButton) {
        self.popVC()
    }
}

extension CommonPagesViewController {
    func getContentResponse(response : ContentPageResponse){
        if response.responseCode == 200 {
            self.descView.text = response.responseData?.txContent?.html2AttributedString
        }
    }
}

extension String {
    var html2AttributedString: String? {
    guard let data = data(using: .utf8) else { return nil }
    do {
        return try NSAttributedString(data: data, options: [.documentType: NSAttributedString.DocumentType.html, .characterEncoding: String.Encoding.utf8.rawValue], documentAttributes: nil).string

    } catch let error as NSError {
        print(error.localizedDescription)
        return  nil
    }
  }
}
