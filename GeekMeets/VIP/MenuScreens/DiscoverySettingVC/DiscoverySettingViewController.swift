//
//  DiscoverySettingViewController.swift
//  GeekMeets
//
//  Created by SOTSYS124 on 23/04/20.
//  Copyright (c) 2020 SOTSYS203. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

class CommonCellModel {
    var title: String
    var description: String?
    var isDescAvailable : Bool = false
    
    init(title: String, description: String, isDescAvailable : Bool = false) {
        self.title = title
        self.description = description
        self.isDescAvailable = isDescAvailable
    }
}


protocol DiscoverySettingProtocol: class {
}

class DiscoverySettingViewController: UIViewController, DiscoverySettingProtocol {
    //var interactor : DiscoverySettingInteractorProtocol?
    var presenter : DiscoverySettingPresentationProtocol?
    
    @IBOutlet weak var tblDiscoverList: UITableView!
    // MARK: Object lifecycle
    
    var objDiscoverData : [CommonCellModel] = []
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = DiscoverySettingInteractor()
        let presenter = DiscoverySettingPresenter()
        
        //View Controller will communicate with only presenter
        viewController.presenter = presenter
        //viewController.interactor = interactor
        
        //Presenter will communicate with Interector and Viewcontroller
        presenter.viewController = viewController
        presenter.interactor = interactor
        
        //Interactor will communucate with only presenter.
        interactor.presenter = presenter
    }
    
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        self.registerTableViewCell()
    }
    
    func registerTableViewCell(){
        self.tblDiscoverList.register(UINib.init(nibName: Cells.CommonTblListCell, bundle: Bundle.main), forCellReuseIdentifier: Cells.CommonTblListCell)
        
        self.objDiscoverData = [CommonCellModel(title: "Interested Age Range", description: "20-30", isDescAvailable: true), CommonCellModel(title: "Interested In Gender", description: "Male, Female", isDescAvailable: true), CommonCellModel(title: "Most liked social media platforms", description: "Whats App, Instagram, Snapchat", isDescAvailable: true)]
    }
    
    @IBAction func btnBackAction(_ sender: UIButton) {
        self.popVC()
    }
}

extension DiscoverySettingViewController : UITableViewDataSource, UITableViewDelegate {
    func numberOfSections(in tableView: UITableView) -> Int {
        return 1
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return self.objDiscoverData.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: Cells.CommonTblListCell)
        cell?.selectionStyle = .none
        return cell!
    }
    
    func tableView(_ tableView: UITableView, willDisplay cell: UITableViewCell, forRowAt indexPath: IndexPath) {
        if let cell = cell as? CommonTblListCell {
            
            
            let data = self.objDiscoverData[indexPath.row]
            
            cell.lblTitle.text = data.title
            cell.lblDesc.text = data.description
        }
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        let data = self.objDiscoverData[indexPath.row]
        if data.isDescAvailable {
            return UITableView.automaticDimension
        } else {
            return 70
        }
    }
    
     func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        let index = indexPath.row
        let queVC = GeekMeets_StoryBoard.Questionnaire.instantiateViewController(withIdentifier: GeekMeets_ViewController.SelectAgeRange) as? SelectAgeRangeViewController
        queVC?.isFromSignUp = false
        queVC?.interest_delegate = self
        if index == 0 {
            queVC?.index = 1
            
        } else if index == 1 {
            queVC?.index = 2
        } else {
            queVC?.index = 3
        }
        self.pushVC(queVC!)
    }
}

extension DiscoverySettingViewController : SelectInterestAgeGenderDelegate {
    func getSelectedValue(index: Int, data: String) {
        if index == 1 {
            self.objDiscoverData[0].description = data
        } else if index == 2 {
            self.objDiscoverData[1].description = data
        } else {
            self.objDiscoverData[2].description = data
        }
        self.tblDiscoverList.reloadData()
    }
}
