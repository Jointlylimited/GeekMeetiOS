//
//  EditPreferenceInteractor.swift
//  GeekMeets
//
//  Created by SOTSYS124 on 27/05/20.
//  Copyright (c) 2020 SOTSYS203. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol EditPreferenceInteractorProtocol {
    func callCreatePreferenceAPI(params : Dictionary<String, String>)
}

protocol EditPreferenceDataStore {
    //var name: String { get set }
}

class EditPreferenceInteractor: EditPreferenceInteractorProtocol, EditPreferenceDataStore {
    var presenter: EditPreferencePresentationProtocol?
    //var name: String = ""
    
    // MARK: Do something
    func callCreatePreferenceAPI(params : Dictionary<String, String>){
        LoaderView.sharedInstance.showLoader()
        PreferencesAPI.update(nonce: authToken.nonce, timestamp: Int(authToken.timeStamp)!, token: authToken.token, language: APPLANGUAGE.english, authorization: UserDataModel.authorization, tiPreferenceType: params["tiPreferenceType"]!, iAnswerId: params["iAnswerId"]!, iPreferenceId: params["iPreferenceId"]!, iOptionId: params["iOptionId"]!) { (response, error) in
            
            LoaderView.sharedInstance.hideLoader()
            if response?.responseCode == 200 {
                         self.presenter?.getPostPreferenceResponse(response : response!)
                     } else if response?.responseCode == 203 {
                         AppSingleton.sharedInstance().logout()
                     } else {
                         if error != nil {
                             AppSingleton.sharedInstance().showAlert(kSomethingWentWrong, okTitle: "OK")
                         } else {
                             AppSingleton.sharedInstance().showAlert((response?.responseMessage!)!, okTitle: "OK")
                         }
                     }
        }
    }
}
