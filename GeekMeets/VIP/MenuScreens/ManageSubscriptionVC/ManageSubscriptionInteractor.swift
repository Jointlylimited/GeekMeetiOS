//
//  ManageSubscriptionInteractor.swift
//  GeekMeets
//
//  Created by SOTSYS124 on 23/04/20.
//  Copyright (c) 2020 SOTSYS203. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ManageSubscriptionInteractorProtocol {
    func callCreateSubscriptionAPI(param : Dictionary<String, String>)
}

protocol ManageSubscriptionDataStore {
    //var name: String { get set }
}

class ManageSubscriptionInteractor: ManageSubscriptionInteractorProtocol, ManageSubscriptionDataStore {
    var presenter: ManageSubscriptionPresentationProtocol?
    //var name: String = ""
    
    // MARK: Do something
    func callCreateSubscriptionAPI(param : Dictionary<String, String>) {
        LoaderView.sharedInstance.showLoader()
        SubscriptionAPI.createSubscription(nonce: authToken.nonce, timestamp: authToken.timeStamp, token: authToken.token, authorization: UserDataModel.authorization, vTransactionId: param["vTransactionId"]!, tiType: param["tiType"]!, fPrice: param["fPrice"]!, vReceiptData: param["vReceiptData"]!, iStartDate: param["iStartDate"]!, iEndDate: param["iEndDate"]!) { (response, error) in
            
            LoaderView.sharedInstance.hideLoader()
            if response?.responseCode == 200 {
                self.presenter?.getSubscriptionResponse(response: response!)
            } else if response?.responseCode == 400 {
                self.presenter?.getSubscriptionResponse(response: response!)
            }  else {
                if error != nil {
                    AppSingleton.sharedInstance().showAlert(kSomethingWentWrong, okTitle: "OK")
                } else {
                    self.presenter?.getSubscriptionResponse(response: response!)
                }
            }
        }
    }
}
