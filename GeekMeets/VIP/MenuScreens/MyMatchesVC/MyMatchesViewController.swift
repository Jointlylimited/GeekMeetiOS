//
//  MyMatchesViewController.swift
//  GeekMeets
//
//  Created by SOTSYS124 on 22/04/20.
//  Copyright (c) 2020 SOTSYS203. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MyMatchesProtocol: class {
}

class MyMatchesViewController: UIViewController, MyMatchesProtocol {
    //var interactor : MyMatchesInteractorProtocol?
    var presenter : MyMatchesPresentationProtocol?
    
    @IBOutlet weak var tblMatchList: UITableView!
    
    var objMsgData : [MessageViewModel] = []
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = MyMatchesInteractor()
        let presenter = MyMatchesPresenter()
        
        //View Controller will communicate with only presenter
        viewController.presenter = presenter
        //viewController.interactor = interactor
        
        //Presenter will communicate with Interector and Viewcontroller
        presenter.viewController = viewController
        presenter.interactor = interactor
        
        //Interactor will communucate with only presenter.
        interactor.presenter = presenter
    }
    
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        self.registerTableViewCell()
        self.setStoryMsgViewData()
    }
    
    func registerTableViewCell(){
        self.tblMatchList.register(UINib.init(nibName: Cells.MessageListCell, bundle: Bundle.main), forCellReuseIdentifier: Cells.MessageListCell)
    }
    
    func setStoryMsgViewData(){
        self.objMsgData = [MessageViewModel(userImage: #imageLiteral(resourceName: "Image 65"), userName: "Sophia", msgTxt: "Matches on 11 Jan, 2019, 10:23 pm", msgCount: "2", msgTime: "11:23 pm"),MessageViewModel(userImage: #imageLiteral(resourceName: "img_intro_1"), userName: "Sophia", msgTxt: "Matches on 11 Jan, 2019, 10:23 pm", msgCount: "2", msgTime: "11:23 pm"), MessageViewModel(userImage: #imageLiteral(resourceName: "Image 64"), userName: "Linda Parker", msgTxt: "Matches on 11 Jan, 2019, 10:23 pm", msgCount: "2", msgTime: "11:23 pm"), MessageViewModel(userImage: #imageLiteral(resourceName: "Image 62"), userName: "Linda Parker", msgTxt: "Matches on 11 Jan, 2019, 10:23 pm", msgCount: "2", msgTime: "11:23 pm"), MessageViewModel(userImage: #imageLiteral(resourceName: "Image 65"), userName: "Linda Parker", msgTxt: "Matches on 11 Jan, 2019, 10:23 pm", msgCount: "2", msgTime: "11:23 pm"),MessageViewModel(userImage: #imageLiteral(resourceName: "img_intro_1"), userName: "Sophia", msgTxt: "Matches on 11 Jan, 2019, 10:23 pm", msgCount: "2", msgTime: "11:23 pm")]
    }
    @IBAction func btnBackAction(_ sender: UIButton) {
        self.popVC()
    }
}

extension MyMatchesViewController : UITableViewDataSource, UITableViewDelegate {
    func numberOfSections(in tableView: UITableView) -> Int {
        return 1
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return self.objMsgData.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: Cells.MessageListCell)
        return cell!
    }
    
    func tableView(_ tableView: UITableView, willDisplay cell: UITableViewCell, forRowAt indexPath: IndexPath) {
        if let cell = cell as? MessageListCell {
            
            cell.btnChat.alpha = 1.0
            
            let data = objMsgData[indexPath.row]
            cell.userImgView.image = data.userImage
            cell.userName.text = data.userName
            cell.msgText.text = data.msgTxt
            cell.msgTime.alpha = 0.0
            cell.msgCount.alpha = 0.0
        }
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return UITableView.automaticDimension
    }
    
    @available(iOS 11.0, *)
    func tableView(_ tableView: UITableView, trailingSwipeActionsConfigurationForRowAt indexPath: IndexPath) -> UISwipeActionsConfiguration? {
        let deleteAction = UIContextualAction(style: .normal, title:  "", handler: { (ac:UIContextualAction, view:UIView, success:(Bool) -> Void) in
            self.objMsgData.remove(at: indexPath.row)
            self.tblMatchList.reloadData()
            //whatever
            success(true)
        })
        let theImage: UIImage? = UIImage(named:"icn_unmatch")?.withRenderingMode(.alwaysOriginal)
        deleteAction.backgroundColor = #colorLiteral(red: 1, green: 0.8941176471, blue: 0.8941176471, alpha: 1)
        deleteAction.image = theImage
        return UISwipeActionsConfiguration(actions: [deleteAction])
    }
}
