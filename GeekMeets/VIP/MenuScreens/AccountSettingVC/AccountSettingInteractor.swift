//
//  AccountSettingInteractor.swift
//  GeekMeets
//
//  Created by SOTSYS124 on 23/04/20.
//  Copyright (c) 2020 SOTSYS203. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol AccountSettingInteractorProtocol {
    func callUserProfileAPI(id : String, code : String)
}

protocol AccountSettingDataStore {
    //var name: String { get set }
}

class AccountSettingInteractor: AccountSettingInteractorProtocol, AccountSettingDataStore {
    var presenter: AccountSettingPresentationProtocol?
    //var name: String = ""
    
    // MARK: Do something
    func callUserProfileAPI(id : String, code : String){
            LoaderView.sharedInstance.showLoader()
            UserAPI.userProfile(nonce: authToken.nonce, timestamp: authToken.timeStamp, token: authToken.token, authorization: UserDataModel.authorization, iUserId: id, vReferralCode: code) { (response, error) in
                
                delay(0.2) {
                    LoaderView.sharedInstance.hideLoader()
                }
                if response?.responseCode == 200 {
                    print((response?.responseData!)!)
                    self.presenter?.getUserProfileResponse(response: (response?.responseData!)!)
                } else if response?.responseCode == 203 {
                    AppSingleton.sharedInstance().logout()
                    AppSingleton.sharedInstance().showAlert(kLoogedIntoOtherDevice, okTitle: "OK")
                } else if response?.responseCode == 400 {
                    self.presenter?.getUserProfileResponse(response: (response?.responseData!)!)
                }  else {
                    if error != nil {
                        AppSingleton.sharedInstance().showAlert(kSomethingWentWrong, okTitle: "OK")
                    } else {
                        self.presenter?.getUserProfileResponse(response: (response?.responseData!)!)
                    }
                }
            }
        }
}
