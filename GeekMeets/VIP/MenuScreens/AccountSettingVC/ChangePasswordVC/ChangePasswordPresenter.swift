//
//  ChangePasswordPresenter.swift
//  GeekMeets
//
//  Created by SOTSYS124 on 28/04/20.
//  Copyright (c) 2020 SOTSYS203. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ChangePasswordPresentationProtocol {
    func presentSomething()
  func callChangePasswordAPI(vCurrentPassword : String,vNewPassword : String,vConfirmPassword: String)
    func getChangePasswordResponse(response : CommonResponse)
}

class ChangePasswordPresenter: ChangePasswordPresentationProtocol {
    weak var viewController: ChangePasswordProtocol?
    var interactor: ChangePasswordInteractorProtocol?
    
    // MARK: Present something
    func presentSomething() {
        
    }
  
    func callChangePasswordAPI(vCurrentPassword : String,vNewPassword : String,vConfirmPassword: String) {
      
            if vCurrentPassword.isEmpty
            {
                self.viewController?.displayAlert(false, message: kEnterOldPassword)
            }
            else if vNewPassword.isEmpty
            {
                self.viewController?.displayAlert(false, message: kEnterNewPassword)
            }
            else if vNewPassword.length < 6
            {
                self.viewController?.displayAlert(false, message: kPasswordWeak)
            }
            else if vConfirmPassword.isEmpty
            {
                self.viewController?.displayAlert(false, message: kEnterConfirmPassword)
            }
            else if vNewPassword != vConfirmPassword
            {
                self.viewController?.displayAlert(false, message: kPasswordNotMatch)
            }
            else
            {
                self.interactor?.callChangePasswordAPI(vCurrentPassword : vCurrentPassword,vNewPassword : vNewPassword)
            }
    
        }
        
        
    func getChangePasswordResponse(response : CommonResponse) {
             
              self.viewController?.displayAlert(false, message: response.responseMessage!)
      
           }
}
