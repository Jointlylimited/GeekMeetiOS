//
//  ChangePasswordInteractor.swift
//  GeekMeets
//
//  Created by SOTSYS124 on 28/04/20.
//  Copyright (c) 2020 SOTSYS203. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ChangePasswordInteractorProtocol {
    func doSomething()
    func callChangePasswordAPI(vCurrentPassword : String,vNewPassword : String)
}

protocol ChangePasswordDataStore {
    //var name: String { get set }
}

class ChangePasswordInteractor: ChangePasswordInteractorProtocol, ChangePasswordDataStore {
    var presenter: ChangePasswordPresentationProtocol?
    //var name: String = ""
    
    // MARK: Do something
    func doSomething() {
        
    }
    func callChangePasswordAPI(vCurrentPassword : String,vNewPassword : String) {
      
      UserAPI.changePassword(nonce: authToken.nonce, timestamp: Int(authToken.timeStamp)!, token: authToken.token, language: APPLANGUAGE.english, authorization: UserDataModel.currentUser!.vAuthKey!, vCurrentPassword: vCurrentPassword, vNewPassword: vNewPassword ){ (response, error) in
            
            if response?.responseCode == 200 {
                self.presenter?.getChangePasswordResponse(response: response!)
            } else if response?.responseCode == 400 {
                self.presenter?.getChangePasswordResponse(response: response!)
              
            }  else {
                if error != nil {
                    AppSingleton.sharedInstance().showAlert(kSomethingWentWrong, okTitle: "OK")
                } else {
                          
                    self.presenter?.getChangePasswordResponse(response: response!)
                }
            }
        }
    }
}
