//
//  ChangeEmailMobileViewController.swift
//  GeekMeets
//
//  Created by SOTSYS124 on 28/04/20.
//  Copyright (c) 2020 SOTSYS203. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ChangeEmailMobileProtocol: class {
    func getUpdateEmailResponse(response : CommonResponse)
}

class ChangeEmailMobileViewController: UIViewController, ChangeEmailMobileProtocol {
    //var interactor : ChangeEmailMobileInteractorProtocol?
    var presenter : ChangeEmailMobilePresentationProtocol?
    @IBOutlet weak var lblTitle: UILabel!
    @IBOutlet weak var lblEmail: UILabel!
    @IBOutlet weak var txtEmail: UITextField!
    @IBOutlet weak var btnUpdate: UIButton!
    @IBOutlet weak var btnVerify: UIButton!
    
    var isForUpdateEmail : Bool = false
    var objAccountData : CommonCellModel!
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = ChangeEmailMobileInteractor()
        let presenter = ChangeEmailMobilePresenter()
        
        //View Controller will communicate with only presenter
        viewController.presenter = presenter
        //viewController.interactor = interactor
        
        //Presenter will communicate with Interector and Viewcontroller
        presenter.viewController = viewController
        presenter.interactor = interactor
        
        //Interactor will communucate with only presenter.
        interactor.presenter = presenter
    }
    
    
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        self.setTheme()
    }
    
    func setTheme(){
        if isForUpdateEmail {
            self.lblTitle.text = "Email Address"
            self.lblEmail.text = "Verified Email Address"
            self.txtEmail.text = self.objAccountData.description ?? "john@gmail.com"
            self.btnUpdate.setTitle("Send Email Verification", for: .normal)
            self.btnVerify.alpha = UserDataModel.currentUser?.vEmail == self.txtEmail.text ? 1.0 : 0.0
            self.btnUpdate.alpha = self.btnVerify.alpha == 1.0 ? 0.0 : 1.0
        } else {
            self.txtEmail.text = self.objAccountData.description ?? "+1123456789"
            self.btnVerify.alpha = UserDataModel.currentUser?.vPhone == self.txtEmail.text ? 1.0 : 0.0
        }
    }
    
    @IBAction func btnBackAction(_ sender: UIButton) {
        self.popVC()
    }
    @IBAction func btnUpdateAction(_ sender: UIButton) {
        if isForUpdateEmail {
            self.presenter?.callUpdateEmailAPI(iUserId: "\(UserDataModel.currentUser!.iUserId!)", vEmail: self.txtEmail.text!)
        } else {
            let newMobVC = GeekMeets_StoryBoard.Menu.instantiateViewController(withIdentifier: GeekMeets_ViewController.NewMobileScreen)
            self.pushVC(newMobVC)
        }
    }
}

extension ChangeEmailMobileViewController {
    func getUpdateEmailResponse(response : CommonResponse){
        if response.responseCode == 200 {
            AppSingleton.sharedInstance().logout()
            AppSingleton.sharedInstance().showAlert(response.responseMessage!, okTitle: "OK")
        }
    }
}

extension ChangeEmailMobileViewController : UITextFieldDelegate {
    func textFieldShouldBeginEditing(_ textField: UITextField) -> Bool {
        if isForUpdateEmail {
            textField.addTarget(self, action: #selector(textFieldDidChange(textField:)), for: .editingChanged)
            return true
        } else {
             return false
        }
    }
    
    @objc func textFieldDidChange(textField : UITextField){
        if isForUpdateEmail {
            self.txtEmail.text = textField.text
            self.btnVerify.alpha = UserDataModel.currentUser?.vEmail == self.txtEmail.text ? 1.0 : 0.0
            self.btnUpdate.alpha = self.btnVerify.alpha == 1.0 ? 0.0 : 1.0
        }
    }
    
    func textFieldDidEndEditing(_ textField: UITextField) {
        self.txtEmail.text = textField.text
    }
    
    func textFieldShouldReturn(_ textField: UITextField) -> Bool {
        self.txtEmail.text = textField.text
        setTheme()
        textField.resignFirstResponder()
        return true
    }
}
