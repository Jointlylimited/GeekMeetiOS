//
//  NotificationListPresenter.swift
//  GeekMeets
//
//  Created by SOTSYS124 on 15/05/20.
//  Copyright (c) 2020 SOTSYS203. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol NotificationListPresentationProtocol {
    func callAPI(offset: Int, limit: Int)
    func getNotificationListResponse(response : NotificationResponse)
    
    func callReadAPI(iNotificationId : String, tiType : String)
    func getReadNotificationResponse(response: ViewNotification)
    
    func getClearAllNotificationResponse(response: ViewNotification)
    
    func callBadgeCountAPI()
    func getBadgeCountResponse(response : ViewNotification)
}

class NotificationListPresenter: NotificationListPresentationProtocol {
    weak var viewController: NotificationListProtocol?
    var interactor: NotificationListInteractorProtocol?
    
    // MARK: Present something
    func callAPI(offset: Int, limit: Int) {
        self.interactor?.callNotificationListAPI(offset: offset, limit: limit)
    }
    
    func getNotificationListResponse(response : NotificationResponse){
        self.viewController?.getNotificationListResponse(response: response)
    }
    
    func callReadAPI(iNotificationId : String, tiType : String){
        self.interactor?.callReadAPI(iNotificationId: iNotificationId, tiType : tiType)
    }
    
    func getReadNotificationResponse(response: ViewNotification){
        self.viewController?.getReadNotificationResponse(response : response)
    }
    
    func getClearAllNotificationResponse(response: ViewNotification){
        self.viewController?.getClearAllNotificationResponse(response: response)
    }
    
    func callBadgeCountAPI(){
        self.interactor?.callBadgeCountAPI()
    }
    
    func getBadgeCountResponse(response : ViewNotification) {
        self.viewController?.getBadgeCountResponse(response: response)
    }
}
