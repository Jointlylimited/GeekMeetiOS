//
//  SettingsViewController.swift
//  Basecode
//
//  Created by SOTSYS203 on 28/02/18.
//  Copyright (c) 2018 SOTSYS203. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SettingsProtocol: class {
    func displaySomething()
}

class SettingsViewController: UIViewController, SettingsProtocol {
    //var interactor : SettingsInteractorProtocol?
    var presenter : SettingsPresentationProtocol?
    
    //
    @IBOutlet var tblSettings : UITableView?
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = SettingsInteractor()
        let presenter = SettingsPresenter()
        
        //View Controller will communicate with only presenter
        viewController.presenter = presenter
        //viewController.interactor = interactor
        
        //Presenter will communicate with Interector and Viewcontroller
        presenter.viewController = viewController
        presenter.interactor = interactor
        
        //Interactor will communucate with only presenter.
        interactor.presenter = presenter
    }
    
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
    }

    func displaySomething() {
        //nameTextField.text = viewModel.name
    }
    
    @IBAction func actionBack() {
        self.popVC()
    }
}

extension SettingsViewController : UITableViewDataSource, UITableViewDelegate {
    //MARK: UITableViewDataSource
    func numberOfSections(in tableView: UITableView) -> Int {
        return 1
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return 2
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: "cell")
        configureCell(cell: cell!, forRowAtIndexPath: indexPath)
        return cell!
    }
    
    func configureCell(cell: UITableViewCell, forRowAtIndexPath: IndexPath) {
        if forRowAtIndexPath.row == 0 {
            cell.textLabel?.text = "Edit Profile"
        } else {
            cell.textLabel?.text = "Change Password"
        }
    }
    
    
    //MARK: UITableViewDelegate, Select tableview row.
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        var objNavigation : UIViewController? = nil
        if indexPath.row == 0 {
            objNavigation = self.storyboard?.instantiateViewController(withIdentifier: "EditProfileViewController")
        } else {
            objNavigation = self.storyboard?.instantiateViewController(withIdentifier: "ChangePasswordViewController")
        }
        self.pushVC(objNavigation!)
    }
    
    func tableView(_ tableView: UITableView, estimatedHeightForRowAt indexPath: IndexPath) -> CGFloat {
        return UITableView.automaticDimension
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return UITableView.automaticDimension
    }
}
