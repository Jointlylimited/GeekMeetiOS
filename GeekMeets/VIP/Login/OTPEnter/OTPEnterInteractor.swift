//
//  OTPEnterInteractor.swift
//  GeekMeets
//
//  Created by SOTSYS216 on 21/04/20.
//  Copyright (c) 2020 SOTSYS203. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol OTPEnterInteractorProtocol {
    func doSomething()
    func callVerifyOTPAPI(iOTP : String,vCountryCode : String,vPhone : String)
    func callResendOTPAPI(vCountryCode : String,vPhone : String)
    func callNewVerifyOTPAPI(iOTP : String,vCountryCode : String,vPhone : String)
}

protocol OTPEnterDataStore {
    //var name: String { get set }
}

class OTPEnterInteractor: OTPEnterInteractorProtocol, OTPEnterDataStore {
    var presenter: OTPEnterPresentationProtocol?
    //var name: String = ""
    
    // MARK: Do something
    func doSomething() {
        
    }
  
    func callVerifyOTPAPI(iOTP : String,vCountryCode : String,vPhone : String) {
        
    print(UserDataModel.currentUser)
        
    LoaderView.sharedInstance.showLoader()
      let intiUserId: Int = UserDataModel.currentUser!.iUserId ?? 0
        UserAPI.verifyOtp(nonce: authToken.nonce, timestamp: Int(authToken.timeStamp)!, token: authToken.token, language: APPLANGUAGE.english, iUserId: String(intiUserId), iOTP: iOTP, vCountryCode: vCountryCode, vPhone:vPhone, tiStep: "2"){ (response, error) in
            
            delay(0.2) {
                LoaderView.sharedInstance.hideLoader()
            }
            
            if response?.responseCode == 200 {
                self.presenter?.getVerifyOTPResponse(response: response!)
            } else if response?.responseCode == 203 {
                AppSingleton.sharedInstance().logout()
                AppSingleton.sharedInstance().showAlert(kLoogedIntoOtherDevice, okTitle: "OK")
            } else if response?.responseCode == 400 {
                self.presenter?.getVerifyOTPResponse(response: response!)
                
            }  else {
                if error != nil {
                    AppSingleton.sharedInstance().showAlert(kSomethingWentWrong, okTitle: "OK")
                } else {
                    self.presenter?.getVerifyOTPResponse(response: response!)
                }
            }
        }
    }
  
    func callResendOTPAPI(vCountryCode : String,vPhone : String) {
        
        LoaderView.sharedInstance.showLoader()
        let intiUserId: Int = UserDataModel.currentUser!.iUserId!
        UserAPI.requestForOtp(nonce: authToken.nonce, timestamp: Int(authToken.timeStamp)!, token: authToken.token, language: APPLANGUAGE.english, iUserId: String(intiUserId), vCountryCode: vCountryCode, vPhone:vPhone){ (response, error) in
            
            delay(0.2) {
                LoaderView.sharedInstance.hideLoader()
            }
            if response?.responseCode == 200 {
                self.presenter?.getResendOTPResponse(response: response!)
            } else if response?.responseCode == 203 {
                AppSingleton.sharedInstance().logout()
                AppSingleton.sharedInstance().showAlert(kLoogedIntoOtherDevice, okTitle: "OK")
            } else if response?.responseCode == 400 {
                self.presenter?.getResendOTPResponse(response: response!)
            }  else {
                if error != nil {
                    AppSingleton.sharedInstance().showAlert(kSomethingWentWrong, okTitle: "OK")
                } else {
                    self.presenter?.getResendOTPResponse(response: response!)
                }
            }
        }
    }
      
    func callNewVerifyOTPAPI(iOTP : String,vCountryCode : String,vPhone : String) {
        
        LoaderView.sharedInstance.showLoader()
        let intiUserId: Int = UserDataModel.currentUser!.iUserId!
        UserAPI.verifyOtp(nonce: authToken.nonce, timestamp: Int(authToken.timeStamp)!, token: authToken.token, language: APPLANGUAGE.english, iUserId: String(intiUserId), iOTP: iOTP, vCountryCode: vCountryCode, vPhone:vPhone){ (response, error) in
            
            delay(0.2) {
                LoaderView.sharedInstance.hideLoader()
            }
            if response?.responseCode == 200 {
                self.presenter?.getNewVerifyOTPResponse(response: response!)
            } else if response?.responseCode == 203 {
                AppSingleton.sharedInstance().logout()
                AppSingleton.sharedInstance().showAlert(kLoogedIntoOtherDevice, okTitle: "OK")
            } else if response?.responseCode == 400 {
                self.presenter?.getNewVerifyOTPResponse(response: response!)
                
            }  else {
                if error != nil {
                    AppSingleton.sharedInstance().showAlert(kSomethingWentWrong, okTitle: "OK")
                } else {
                    self.presenter?.getNewVerifyOTPResponse(response: response!)
                }
            }
        }
    }
}
