// New Checkout
//  LoginInteractor.swift
//  Basecode
//
//  Created by SOTSYS203 on 19/02/18.
//  Copyright (c) 2018 SOTSYS203. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LoginInteractorProtocol {
    func callLoginApi(params : Dictionary<String, String>)
}

protocol LoginDataStore {
    //var name: String { get set }
}

class LoginInteractor: LoginInteractorProtocol, LoginDataStore {
    var presenter: LoginPresentationProtocol?
    //var name: String = ""
    
    // MARK: Do something
    func callLoginApi(params : Dictionary<String, String>) {
        SOService.callAPI(SOAPI.createNewData(params: params)) { (code, error, result) in
            
        }
        
        
        SOService.callAPI(SOAPI.signIn(params: params)) { (code, error, result) in
            //print(code, error ?? "", result ?? "")
            if error == nil && code == 1 {
                let objUser = BaseModel(json: result!)
                print(objUser)
                UserDefaults.standard.set(objUser.responseData?.vAuthKey, forKey: kAuthKey)
                self.presenter?.getLoginResponse(userData : objUser)
            } else {
                self.presenter?.getLoginResponse(userData : nil)
            }
        }
    }
}
