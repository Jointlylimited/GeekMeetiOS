//
// SubscriptionAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class SubscriptionAPI {
    /**
     create subscription
     
     - parameter nonce: (header)  
     - parameter timestamp: (header)  
     - parameter token: (header)  
     - parameter authorization: (header)  
     - parameter vTransactionId: (form) transaction id 
     - parameter tiType: (form) 1-daily, 2-monthly, 3-yearly 
     - parameter fPrice: (form) subscription plan price 
     - parameter vReceiptData: (form) receipt data 
     - parameter iStartDate: (form) starting date 
     - parameter iEndDate: (form) ending date 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func createSubscription(nonce: String, timestamp: String, token: String, authorization: String, vTransactionId: String, tiType: String, fPrice: String, vReceiptData: String, iStartDate: String, iEndDate: String, completion: @escaping ((_ data: SubscriptionResponse?,_ error: Error?) -> Void)) {
        createSubscriptionWithRequestBuilder(nonce: nonce, timestamp: timestamp, token: token, authorization: authorization, vTransactionId: vTransactionId, tiType: tiType, fPrice: fPrice, vReceiptData: vReceiptData, iStartDate: iStartDate, iEndDate: iEndDate).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     create subscription
     - POST /user-subscription/create
     - examples: [{contentType=application/json, example=""}]
     
     - parameter nonce: (header)  
     - parameter timestamp: (header)  
     - parameter token: (header)  
     - parameter authorization: (header)  
     - parameter vTransactionId: (form) transaction id 
     - parameter tiType: (form) 1-daily, 2-monthly, 3-yearly 
     - parameter fPrice: (form) subscription plan price 
     - parameter vReceiptData: (form) receipt data 
     - parameter iStartDate: (form) starting date 
     - parameter iEndDate: (form) ending date 

     - returns: RequestBuilder<SubscriptionResponse> 
     */
    open class func createSubscriptionWithRequestBuilder(nonce: String, timestamp: String, token: String, authorization: String, vTransactionId: String, tiType: String, fPrice: String, vReceiptData: String, iStartDate: String, iEndDate: String) -> RequestBuilder<SubscriptionResponse> {
        let path = "/user-subscription/create"
        let URLString = SwaggerClientAPI.basePath + path
        let formParams: [String:Any?] = [
            "vTransactionId": vTransactionId,
            "tiType": tiType,
            "fPrice": fPrice,
            "vReceiptData": vReceiptData,
            "iStartDate": iStartDate,
            "iEndDate": iEndDate
        ]

        let nonNullParameters = APIHelper.rejectNil(formParams)
        let parameters = APIHelper.convertBoolToString(nonNullParameters)
        
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "nonce": nonce,
            "timestamp": timestamp,
            "token": token,
            "authorization": authorization
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<SubscriptionResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

}
