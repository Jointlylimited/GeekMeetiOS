//
// ReportAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class ReportAPI {
    /**
     Send Report
     
     - parameter nonce: (header)
     - parameter timestamp: (header)
     - parameter token: (header)
     - parameter authorization: (header)
     - parameter tiReportType: (form) 1-user, 2-story
     - parameter iReasonId: (form)
     - parameter vReportText: (form)
     - parameter iReportedFor: (form) UserId for report user (optional, default to 26)
     - parameter iStoryId: (form) story id for reported story (optional, default to 1)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func createReport(nonce: String, timestamp: String, token: String, authorization: String, tiReportType: String, iReasonId: String, vReportText: String, iReportedFor: String? = nil, iStoryId: String? = nil, completion: @escaping ((_ data: CommonResponse?,_ error: Error?) -> Void)) {
        createReportWithRequestBuilder(nonce: nonce, timestamp: timestamp, token: token, authorization: authorization, tiReportType: tiReportType, iReasonId: iReasonId, vReportText: vReportText, iReportedFor: iReportedFor, iStoryId: iStoryId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Send Report
     - POST /user-report/create
     - examples: [{contentType=application/json, example={
  "responseMessage" : "responseMessage",
  "responseCode" : 0
}}]
     
     - parameter nonce: (header)
     - parameter timestamp: (header)
     - parameter token: (header)
     - parameter authorization: (header)
     - parameter tiReportType: (form) 1-user, 2-story
     - parameter iReasonId: (form)
     - parameter vReportText: (form)
     - parameter iReportedFor: (form) UserId for report user (optional, default to 26)
     - parameter iStoryId: (form) story id for reported story (optional, default to 1)

     - returns: RequestBuilder<CommonResponse>
     */
    open class func createReportWithRequestBuilder(nonce: String, timestamp: String, token: String, authorization: String, tiReportType: String, iReasonId: String, vReportText: String, iReportedFor: String? = nil, iStoryId: String? = nil) -> RequestBuilder<CommonResponse> {
        let path = "/user-report/create"
        let URLString = SwaggerClientAPI.basePath + path
        let formParams: [String:Any?] = [
            "iReportedFor": iReportedFor,
            "iStoryId": iStoryId,
            "tiReportType": tiReportType,
            "iReasonId": iReasonId,
            "vReportText": vReportText
        ]

        let nonNullParameters = APIHelper.rejectNil(formParams)
        let parameters = APIHelper.convertBoolToString(nonNullParameters)
        
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "nonce": nonce,
            "timestamp": timestamp,
            "token": token,
            "authorization": authorization
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<CommonResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**
     Report Reason List
     
     - parameter nonce: (header)
     - parameter timestamp: (header)
     - parameter token: (header)
     - parameter authorization: (header)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func listReason(nonce: String, timestamp: String, token: String, authorization: String, completion: @escaping ((_ data: ReasonListData?,_ error: Error?) -> Void)) {
        listReasonWithRequestBuilder(nonce: nonce, timestamp: timestamp, token: token, authorization: authorization).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Report Reason List
     - GET /report-reason/list
     - examples: [{contentType=application/json, example=""}]
     
     - parameter nonce: (header)
     - parameter timestamp: (header)
     - parameter token: (header)
     - parameter authorization: (header)

     - returns: RequestBuilder<ReasonListData>
     */
    open class func listReasonWithRequestBuilder(nonce: String, timestamp: String, token: String, authorization: String) -> RequestBuilder<ReasonListData> {
        let path = "/report-reason/list"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "nonce": nonce,
            "timestamp": timestamp,
            "token": token,
            "authorization": authorization
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<ReasonListData>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

}
