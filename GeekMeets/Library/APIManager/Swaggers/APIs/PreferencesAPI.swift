//
// PreferencesAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class PreferencesAPI {
    /**
     Preferences- Question/Answer
     
     - parameter nonce: (header)  
     - parameter timestamp: (header)  
     - parameter token: (header)  
     - parameter language: (header) en&#x3D;English, fr&#x3D;French 
     - parameter authorization: (header)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func list(nonce: String, timestamp: Int, token: String, language: String, authorization: String, completion: @escaping ((_ data: PreferencesResponse?,_ error: Error?) -> Void)) {
        listWithRequestBuilder(nonce: nonce, timestamp: timestamp, token: token, language: language, authorization: authorization).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Preferences- Question/Answer
     - POST /preferences/list
     - examples: [{contentType=application/json, example=""}]
     
     - parameter nonce: (header)  
     - parameter timestamp: (header)  
     - parameter token: (header)  
     - parameter language: (header) en&#x3D;English, fr&#x3D;French 
     - parameter authorization: (header)  

     - returns: RequestBuilder<PreferencesResponse> 
     */
    open class func listWithRequestBuilder(nonce: String, timestamp: Int, token: String, language: String, authorization: String) -> RequestBuilder<PreferencesResponse> {
        let path = "/preferences/list"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "nonce": nonce,
            "timestamp": timestamp.encodeToJSON(),
            "token": token,
            "language": language,
            "authorization": authorization
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<PreferencesResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

}
