//
// MediaAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class MediaAPI {
    /**
     Apply reaction on user pic
     
     - parameter nonce: (header)  
     - parameter timestamp: (header)  
     - parameter token: (header)  
     - parameter authorization: (header)  
     - parameter iUserId: (form) user id for other user 
     - parameter iMediaId: (form) media id for pic 
     - parameter tiRactionType: (form) 1-heart,2-hearteyes,3-heartkiss 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func applyReaction(nonce: String, timestamp: String, token: String, authorization: String, iUserId: String, iMediaId: String, tiRactionType: String, completion: @escaping ((_ data: MediaReaction?,_ error: Error?) -> Void)) {
        applyReactionWithRequestBuilder(nonce: nonce, timestamp: timestamp, token: token, authorization: authorization, iUserId: iUserId, iMediaId: iMediaId, tiRactionType: tiRactionType).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Apply reaction on user pic
     - POST /users-story/apply-reaction
     - examples: [{contentType=application/json, example=""}]
     
     - parameter nonce: (header)  
     - parameter timestamp: (header)  
     - parameter token: (header)  
     - parameter authorization: (header)  
     - parameter iUserId: (form) user id for other user 
     - parameter iMediaId: (form) media id for pic 
     - parameter tiRactionType: (form) 1-heart,2-hearteyes,3-heartkiss 

     - returns: RequestBuilder<MediaReaction> 
     */
    open class func applyReactionWithRequestBuilder(nonce: String, timestamp: String, token: String, authorization: String, iUserId: String, iMediaId: String, tiRactionType: String) -> RequestBuilder<MediaReaction> {
        let path = "/users-story/apply-reaction"
        let URLString = SwaggerClientAPI.basePath + path
        let formParams: [String:Any?] = [
            "iUserId": iUserId,
            "iMediaId": iMediaId,
            "tiRactionType": tiRactionType
        ]

        let nonNullParameters = APIHelper.rejectNil(formParams)
        let parameters = APIHelper.convertBoolToString(nonNullParameters)
        
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "nonce": nonce,
            "timestamp": timestamp,
            "token": token,
            "authorization": authorization
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<MediaReaction>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

}
